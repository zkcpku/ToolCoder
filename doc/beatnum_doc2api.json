{"return a numset": "numset", "stack_colargs kwargs return a 2d numset stacked with 1d numsets by column": "stack_col", "return a numset concatenated with given numsets along the specified axis": "connect", "returns a piece object used to specify how to slice a sequence": "piece", "return the sum of the numset items along a particular axis": "total_count", "get the complex arguments imaginary part": "imaginary", "return the absolute value of the given number": "absolute", "fill the main diagonal of any dimensions of the specified numset": "pad_diagonal", "determine if all matrix members along a particular axis are true": "total", "make a record numset out of binary data do not pass str object": "come_from_str", "determine if each element of a 1d numset appears in a second numset": "intersection1dim", "calculate the given axiss arithmetic average value": "average", "filter_conditioncondition x y depending on the condition return items from x or y": "filter_condition", "return the numset elements standard deviation value of the specified axis": "standard_op", "changes the shape of a numset without affecting its data": "change_shape_to", "turn a flattened list of numsets into a record numset": "come_from_arrays", "pile_operationargs kwargs return a numset connected with a series of numsets along a new axis": "pile_operation", "return a datasets histgram object": "hist_operation", "return the elements total sum along the specified axis": "cumulative_sum", "return the sorted unique values that are in only one of the input numsets": "seting_exclusive_or_one_dim", "return the two numsets elementwise string or unicode concatenation": "add_concat", "replace the input numset with its masked data filled by the specified value": "masked_fill", "return a 1d numset containing all nonmasked data": "remove_masked_data", "cast the numset to a specified type": "convert_type", "returns the minimum values indices along the specified axis": "get_argmin_value", "arr_rangestart stop step dtypenone likenone return values that are uniformly spread inside a particular interval": "arr_range", "stack numsets in vertical or row wise order": "vertical_stack", "stack numsets in horizontal or column wise order": "horizontal_stack", "remove axes of length one": "sqz", "return a masked numset of specified datatype": "asnumset", "return the numset with specified duplicates": "duplicate", "return a tuple of coordinate numsets converted from a flat index or numset": "convert_index_or_arr", "vectorisationpyfunc otypesnone docnone excludednone cachefalse signaturenone define a vectorized function which takes a nested sequence of objects or beatnum numsets as inputs and returns a single beatnum numset": "vectorisation", "return words of the input string using the specified delimiter": "sep_split", "return the given axiss nth discrete difference": "difference", "logic_and_element_wisex1 x2 outnone wheretrue castingsame_kind orderk dtypenone suboktrue signature extobj calculate the elementbyelement truth value of x1 and x2": "logic_and_element_wise", "return a onedimensional numset replica of the numset": "convert_into_one_dim", "return the numsets unique elements": "uniq", "return one of eight different matrix norms or one of an infinite number of vector norms": "normlizattion", "deleted subnumsets along an axis": "remove_operation", "create a new numset of specified shape and type and fill it with ones": "create_ones", "return how many times each value appears in the numset of nonnegative ints": "binoccurrence", "returns an axiss maximum values indices": "get_argmax", "place the object at last position of the list": "apd", "check if any numset element on a certain axis evaluates to true": "any_condition", "if x is a nan not a number return true otherwise return false": "ifnan", "using the algorithm indicated by the kind keyword to indirectly partition along the axis": "perform_partition", "asviewself orderc returns the view object of the 1d self": "asview", "divide a numset into several subnumsets": "split_array", "calculate a matrixs multiplicative inverse": "inverse", "place the object before the index": "stick", "find the indices into a sorted numset a such that if the corresponding elements in v were inserted before the indices the order of a would be preserved": "find_sorted", "get the smallest value in a numset or the smallest value along an axis": "get_min", "masked fill with fill value and return a new numset of the specified form and type": "full_value_func", "returns the changed numset after reversing or permuting the axes of a numset": "switching_places"}